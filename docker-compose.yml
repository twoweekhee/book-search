services:
  # Spring Boot Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: book-search-app:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=bookdb
      - DB_USERNAME=bookuser
      - DB_PASSWORD=bookpass
    networks:
      - book-search-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: book-search-db
    environment:
      POSTGRES_DB: bookdb
      POSTGRES_USER: bookuser
      POSTGRES_PASSWORD: bookpass
      TZ: Asia/Seoul
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/main/resources/db:/docker-entrypoint-initdb.d:ro
    networks:
      - book-search-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bookuser -d bookdb"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
    driver: local

networks:
  book-search-network:
    driver: bridge